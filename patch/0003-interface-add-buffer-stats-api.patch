From 2f5da034941054d5cb920bf94b78903280e3afa9 Mon Sep 17 00:00:00 2001
From: hedi bouattour <hedibouattour2010@gmail.com>
Date: Fri, 10 Dec 2021 15:18:05 +0000
Subject: [PATCH] interface: add buffer stats api

Type: fix
Change-Id: I2c918eabd8578931a4659256b2f6ee83221b4ff8

Change-Id: I9c2c0b0a35884f0375b4f589841732ad9979fe6c
Signed-off-by: hedi bouattour <hedibouattour2010@gmail.com>
---
 src/vlib/buffer.c         | 14 ++++++++++++++
 src/vlib/buffer.h         |  9 +++++++++
 src/vnet/interface.api    | 20 ++++++++++++++++++++
 src/vnet/interface_api.c  | 17 +++++++++++++++++
 src/vnet/interface_test.c | 12 ++++++++++++
 5 files changed, 72 insertions(+)

diff --git a/src/vlib/buffer.c b/src/vlib/buffer.c
index 304d1abd8..da7037102 100644
--- a/src/vlib/buffer.c
+++ b/src/vlib/buffer.c
@@ -780,6 +780,20 @@ buffer_get_by_index (vlib_buffer_main_t * bm, u32 index)
   return bp;
 }
 
+void
+get_buffers_stats (buffers_stats_t *bs, u32 index)
+{
+  vlib_main_t *vm = vlib_get_main ();
+  vlib_buffer_pool_t *bp =
+    buffer_get_by_index (vm->buffer_main, clib_net_to_host_u32 (index));
+  if (!bp)
+    return;
+  bs->available_buffers = htonl (bp->n_avail);
+  bs->cached_buffers = htonl (buffer_get_cached (bp));
+  bs->used_buffers =
+    htonl (bp->n_buffers - bp->n_avail - buffer_get_cached (bp));
+}
+
 static void
 buffer_gauges_collect_used_fn (vlib_stats_collector_data_t *d)
 {
diff --git a/src/vlib/buffer.h b/src/vlib/buffer.h
index b548adf4b..043c8c6ea 100644
--- a/src/vlib/buffer.h
+++ b/src/vlib/buffer.h
@@ -440,6 +440,15 @@ struct vlib_main_t;
 
 #define VLIB_BUFFER_POOL_PER_THREAD_CACHE_SZ 512
 
+typedef struct
+{
+  u32 available_buffers;
+  u32 cached_buffers;
+  u32 used_buffers;
+} buffers_stats_t;
+
+void get_buffers_stats (buffers_stats_t *bs, u32 index);
+
 typedef struct
 {
   CLIB_CACHE_LINE_ALIGN_MARK (cacheline0);
diff --git a/src/vnet/interface.api b/src/vnet/interface.api
index 4d28332a6..388a53f80 100644
--- a/src/vnet/interface.api
+++ b/src/vnet/interface.api
@@ -774,6 +774,26 @@ autoreply define pcap_trace_off
   u32 context;
 };
 
+/** \brief Get available, cached and used buffers
+    @param client_index - opaque cookie to identify the sender
+    @param context - sender context, to match reply w/ request
+    @param buffer_index - buffer stat index
+*/
+define get_buffers_stats
+{
+  u32 client_index;
+  u32 context;
+  u32 buffer_index;
+};
+define get_buffers_stats_reply
+{
+  u32 context;
+  i32 retval;
+  u32 available_buffers;
+  u32 cached_buffers;
+  u32 used_buffers;
+};
+
 /*
  * Local Variables:
  * eval: (c-set-style "gnu")
diff --git a/src/vnet/interface_api.c b/src/vnet/interface_api.c
index 5b48fea02..e18eeadc0 100644
--- a/src/vnet/interface_api.c
+++ b/src/vnet/interface_api.c
@@ -81,6 +81,23 @@ vpe_api_main_t vpe_api_main;
   _ (SW_INTERFACE_ADDRESS_REPLACE_BEGIN, sw_interface_address_replace_begin)  \
   _ (SW_INTERFACE_ADDRESS_REPLACE_END, sw_interface_address_replace_end)
 
+static void
+vl_api_get_buffers_stats_t_handler (vl_api_get_buffers_stats_t *mp)
+{
+  vl_api_get_buffers_stats_reply_t *rmp;
+
+  int rv = 0;
+  buffers_stats_t obj = { 0, 0, 0 };
+  buffers_stats_t *bs = &obj;
+  get_buffers_stats (bs, mp->buffer_index);
+
+  REPLY_MACRO2 (VL_API_GET_BUFFERS_STATS_REPLY, ({
+		  rmp->available_buffers = bs->available_buffers;
+		  rmp->cached_buffers = bs->cached_buffers;
+		  rmp->used_buffers = bs->used_buffers;
+		}));
+}
+
 static void
 vl_api_sw_interface_set_flags_t_handler (vl_api_sw_interface_set_flags_t * mp)
 {
diff --git a/src/vnet/interface_test.c b/src/vnet/interface_test.c
index cc406bef2..c82b6f711 100644
--- a/src/vnet/interface_test.c
+++ b/src/vnet/interface_test.c
@@ -46,6 +46,18 @@ typedef struct
 
 static interface_test_main_t interface_test_main;
 
+static int
+api_get_buffers_stats (vat_main_t *vam)
+{
+  int ret = 0;
+  return ret;
+}
+
+static void
+vl_api_get_buffers_stats_reply_t_handler (vl_api_get_buffers_stats_reply_t *mp)
+{
+}
+
 static int
 api_sw_interface_set_flags (vat_main_t *vam)
 {
-- 
2.34.1

